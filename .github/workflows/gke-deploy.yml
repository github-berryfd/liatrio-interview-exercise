# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when there is a push to the "main" branch.
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Create and configure a Workload Identity Provider for GitHub (https://github.com/google-github-actions/auth#setting-up-workload-identity-federation)
#
# 3. Change the values for the GAR_LOCATION, GKE_ZONE, GKE_CLUSTER, IMAGE, REPOSITORY and DEPLOYMENT_NAME environment variables (below).
#
# For more support on how to run the workflow, please visit https://github.com/google-github-actions/setup-gcloud/tree/master/example-workflows/gke-kustomize

name: Build and Deploy to GKE

on:
  workflow_call:
    inputs:
      kube_context:
        required: true
        type: string
      gke_cluster:
        required: true
        type: string
      gke_region:
        required: true
        type: string
    secrets:
      PROJECT_ID: 
        required: false
      GCP_SA_KEY:
        required: false

env:
  GKE_CLUSTER: ${{ inputs.gke_cluster }}   
  GKE_REGION: ${{ inputs.gke_region }}   
  KUBE_CONTEXT: ${{ inputs.kube-context }}

jobs:
  build-publish:
    name: Build and Publish Docker Image
    runs-on: ubuntu-latest
    environment: production

    permissions:
      contents: 'read'

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      # Configure Workload Identity Federation and generate an access token.
      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1.2.0'
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          create_credentials_file: true
          export_environment_variables: true

      - name: Set up GKE credentials
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_REGION }}

      - name: "Deploy to GKE"
        run: kubectl apply -f ./deployment/kube/
