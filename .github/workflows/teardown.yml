name: "Tearing Down Infrastructure"
on: [workflow_dispatch]

permissions:
    contents: read
          
jobs:
    terraform:
        name: 'Teardown Infrastructure'
        runs-on: ubuntu-latest
        environment: production
        # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
        defaults:
            run:
                shell: bash

        steps:
        # Checkout the repository to the GitHub Actions runner
        - name: Checkout
          uses: actions/checkout@v3

        - name: Setup Cloud SDK
          uses: google-github-actions/setup-gcloud@v1
          
      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v1
          env:
            TF_VAR_project_id: ${{ secrets.GKE_PROJECT_ID }}
            TF_VAR_region: ${{ vars.REGION }}
            TF_VAR_network: ${{ vars.NETWORK }}
            TF_VAR_subnetwork: ${{ vars.SUBNETWORK }}
            TF_VAR_ip_range_pods: ${{ vars.IP_RANGE_PODS }}
            TF_VAR_ip_range_services: ${{ vars.IP_RANGE_SERVICES }}
            TF_VAR_compute_engine_service_account: ${{ secrets.SERVICE_ACCOUNT }}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
        - name: Terraform Initgit
          run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
        - name: Terraform Format
          run: terraform fmt -check

    # Generates an execution plan for Terraform
        - name: Terraform Destory
          run: terraform destroy
          
        